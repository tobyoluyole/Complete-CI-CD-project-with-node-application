name: Build, Deploy, and Update VM

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    env:
      DOCKER_IMAGE_NAME: pracricetobivincent/node-js-application
      VERSION_FILE: .version

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Increment version
      id: version
      run: |
        if [ -f "$VERSION_FILE" ]; then
          VERSION=$(cat $VERSION_FILE)
        else
          VERSION=0.0.0
        fi
        echo "Current version: $VERSION"
        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
        PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo $NEW_VERSION > $VERSION_FILE
        echo "New version: $NEW_VERSION"
        echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        docker build -t $DOCKER_IMAGE_NAME:latest -t $DOCKER_IMAGE_NAME:${{ env.VERSION }} .

    - name: Push Docker image to Docker Hub
      run: |
        docker push $DOCKER_IMAGE_NAME:latest
        docker push $DOCKER_IMAGE_NAME:${{ env.VERSION }}

    - name: Commit version change
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add $VERSION_FILE
        git commit -m "Bump version to ${{ env.VERSION }}"
        git push

  update-vm:
    runs-on: ubuntu-latest

    needs: build-and-push
    
    env:
      VM_USER: azureuser
      VM_HOST: 172.210.29.31
      REPO_PATH: https://github.com/tobyoluyole/Complete-CI-CD-project-with-node-application.git

    steps:
    - name: SSH into Azure VM and Pull Latest Repo
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
       echo "$SSH_PRIVATE_KEY" > /tmp/private_key
        chmod 600 /tmp/private_key
        ssh -o StrictHostKeyChecking=no -T -i /tmp/private_key $VM_USER@$VM_HOST << 'EOF'
          cd Complete-CI-CD-project-with-node-application || exit 1
          if [ ! -d ".git" ]; then
            echo "Error: Not a git repository."
            exit 1
          fi
          git pull origin main
        EOF
        rm -f /tmp/private_key

  apply-deployment:
    runs-on: ubuntu-latest

    needs: update-vm
    
    env:
      VM_USER: azureuser
      VM_HOST: 172.210.29.31

    steps:
    - name: SSH into Azure VM and Apply Kubernetes Files
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$SSH_PRIVATE_KEY" > /tmp/private_key
        chmod 600 /tmp/private_key
        ssh -o StrictHostKeyChecking=no -T -i /tmp/private_key $VM_USER@$VM_HOST << 'EOF'
          cd Complete-CI-CD-project-with-node-application || exit 1
          kubectl delete deployment --all
          kubectl delete service --all
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
          kubectl apply -f role.yaml
          kubectl apply -f rolebinding.yaml
          nohup kubectl port-forward svc/my-node-app-service 3000:80 --address 0.0.0.0 > port-forward.log 2>&1 &
EOF
